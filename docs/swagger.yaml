basePath: /v1
definitions:
  internal_controllers.CloudEvents:
    properties:
      events:
        description: Events is a list of CloudEvent access requests.
        items:
          $ref: '#/definitions/internal_controllers.EventFilter'
        type: array
    type: object
  internal_controllers.EventFilter:
    properties:
      eventType:
        description: |-
          EventType specifies the CloudEvent type field of the documents the client wants to access.
          It must be specified.
        type: string
      ids:
        description: |-
          IDs is a list of ids for the CloudEvents that the client wants to access. This list must
          contain at least one element. If the list contains the special value "*" then the request
          has no restrictions on id.
        items:
          type: string
        type: array
      source:
        description: |-
          Source specifies the CloudEvent source field for the documents the client wants to access.
          One may also use the special value "*" for this field to select all sources.
        type: string
    required:
    - eventType
    - ids
    - source
    type: object
  internal_controllers.TokenRequest:
    properties:
      audience:
        description: Audience is the intended audience for the token.
        items:
          type: string
        type: array
      cloudEvents:
        allOf:
        - $ref: '#/definitions/internal_controllers.CloudEvents'
        description: CloudEvents contains requests for access to CloudEvents attached
          to the specified NFT.
      nftContractAddress:
        description: |-
          NFTContractAddress is the address of the NFT contract. Privileges will be checked
          on-chain at this address. Address must be in the 0x format e.g. 0x5FbDB2315678afecb367f032d93F642f64180aa3.
          Varying case is okay.
        example: 0xbA5738a18d83D41847dfFbDC6101d37C69c9B0cF
        type: string
      privileges:
        description: Privileges is a list of the desired privileges. It must not be
          empty.
        example:
        - 1
        - 2
        - 3
        - 4
        items:
          type: integer
        type: array
      tokenId:
        description: TokenID is the NFT token id.
        example: 7
        type: integer
    required:
    - nftContractAddress
    - privileges
    - tokenId
    type: object
  internal_controllers.TokenResponse:
    properties:
      token:
        type: string
    type: object
info:
  contact: {}
  title: DIMO Token Exchange API
  version: "1.0"
paths:
  /tokens/exchange:
    post:
      consumes:
      - application/json
      description: Returns a signed token with the requested privileges.
      parameters:
      - description: 'Requested privileges: must include address, token id, and privilege
          ids'
        in: body
        name: tokenRequest
        required: true
        schema:
          $ref: '#/definitions/internal_controllers.TokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_controllers.TokenResponse'
      security:
      - BearerAuth: []
      summary: privileges on the correct token.
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
