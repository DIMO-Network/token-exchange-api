// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tokens/exchange": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Returns a signed token with the requested privileges.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "privileges on the correct token.",
                "parameters": [
                    {
                        "description": "Requested privileges: must include address, token id, and privilege ids",
                        "name": "tokenRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.PermissionTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_controllers.PermissionTokenResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "github_com_DIMO-Network_token-exchange-api_pkg_tokenclaims.CloudEvents": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/github_com_DIMO-Network_token-exchange-api_pkg_tokenclaims.Event"
                    }
                }
            }
        },
        "github_com_DIMO-Network_token-exchange-api_pkg_tokenclaims.Event": {
            "type": "object",
            "properties": {
                "eventType": {
                    "type": "string"
                },
                "ids": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "internal_controllers.PermissionTokenRequest": {
            "type": "object",
            "required": [
                "nftContractAddress",
                "privileges",
                "tokenId"
            ],
            "properties": {
                "audience": {
                    "description": "Audience is the intended audience for the token.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cloudEvents": {
                    "description": "CloudEvent request, includes attestations",
                    "allOf": [
                        {
                            "$ref": "#/definitions/github_com_DIMO-Network_token-exchange-api_pkg_tokenclaims.CloudEvents"
                        }
                    ]
                },
                "nftContractAddress": {
                    "description": "NFTContractAddress is the address of the NFT contract. Privileges will be checked\non-chain at this address. Address must be in the 0x format e.g. 0x5FbDB2315678afecb367f032d93F642f64180aa3.\nVarying case is okay.",
                    "type": "string",
                    "example": "0xbA5738a18d83D41847dfFbDC6101d37C69c9B0cF"
                },
                "privileges": {
                    "description": "Privileges is a list of the desired privileges. It must not be empty.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    },
                    "example": [
                        1,
                        2,
                        3,
                        4
                    ]
                },
                "tokenId": {
                    "description": "TokenID is the NFT token id.",
                    "type": "integer",
                    "example": 7
                }
            }
        },
        "internal_controllers.PermissionTokenResponse": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "/v1",
	Schemes:          []string{},
	Title:            "DIMO Token Exchange API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
