replicaCount: 2
image:
  repository: dimozone/token-exchange-api
  pullPolicy: IfNotPresent
  tag: 0.3.6
cronJob:
  enabled: false
  schedule: 0 0 * * 0
env:
  ENVIRONMENT: prod
  ENABLE_PPROF: false
  JWT_KEY_SET_URL: https://auth.dimo.zone/keys
  DEX_GRPC_ADDRESS: dex-roles-rights-prod:5557
  USERS_API_GRPC_ADDRESS: users-api-prod:8086
  CONTRACT_ADDRESS_SACD: '0x3c152B5d96769661008Ff404224d6530FCAC766d'
  CONTRACT_ADDRESS_TEMPLATE: '0xbfc07085736426295f60baa15dc70743e98fe612'
  CONTRACT_ADDRESS_MANUFACTURER: '0x3b07e2A2ABdd0A9B8F7878bdE6487c502164B9dd'
  IDENTITY_URL: http://identity-api-prod:8080/query
  IPFS_BASE_URL: https://assets.dimo.xyz/ipfs
  IPFS_TIMEOUT: 30s
  DIMO_REGISTRY_CHAIN_ID: 137
resources:
  limits:
    cpu: 1
    memory: 1024Mi
  requests:
    cpu: 100m
    memory: 256Mi
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector: {}
tolerations: []
affinity: {}
podDisruptionBudget:
  minAvailable: 1
kafka: {}
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    nginx.ingress.kubernetes.io/enable-cors: 'true'
    nginx.ingress.kubernetes.io/cors-allow-origin: '*'
    nginx.ingress.kubernetes.io/limit-rps: '100'
    external-dns.alpha.kubernetes.io/hostname: token-exchange-api.dimo.zone
  hosts:
    - host: token-exchange-api.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
